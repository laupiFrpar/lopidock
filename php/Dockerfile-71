#
#--------------------------------------------------------------------------
# Image Setup
#--------------------------------------------------------------------------
#

FROM php:7.1-fpm

MAINTAINER Pierre-Louis Launay <laupi.frpar@gmail.com>

#####################################
# Get arguments
#####################################

ARG INSTALL_APCU=false
ARG INSTALL_APCU_BC=false
ARG INSTALL_BCMATH=false
ARG INSTALL_GD=false
ARG INSTALL_IMAGICK=false
ARG INSTALL_ICU_VERSION=60.1
ARG INSTALL_INTL=false
ARG INSTALL_MCRYPT=false
ARG INSTALL_MYSQL=false
ARG INSTALL_OPCACHE=false
ARG INSTALL_REDIS=false
ARG INSTALL_ZIP=false

#####################################
# Set environments variable
#####################################

ENV PHP_CPPFLAGS="$PHP_CPPFLAGS -std=c++11"

#####################################
# Install base
#####################################

RUN apt-get update; \
    apt-get install -y --no-install-recommends \
        curl \
        libmemcached-dev \
        libz-dev \
        libpq-dev \
        libjpeg-dev \
        libpng12-dev \
        libfreetype6-dev \
        libssl-dev \
        libmcrypt-dev \
    ;

COPY ./usr/local/etc/php/conf.d/custom.ini /usr/local/etc/php/conf.d

#####################################
# APCU
#####################################

RUN if [ ${INSTALL_OPCACHE} = false ] && [ ${INSTALL_APCU} = true ]; then \
    pecl install apcu; \
    docker-php-ext-enable apcu; \
fi

RUN if [ ${INSTALL_OPCACHE} = false ] && [ ${INSTALL_APCU} = true ] && [ ${INSTALL_APCU_BC} = true ]; then \
    pecl install apcu_bc; \
fi

COPY ./usr/local/etc/php/conf.d/apcu.ini /usr/local/etc/php/conf.d/apcu.ini

#####################################
# BCMATH
#####################################

RUN if [ ${INSTALL_BCMATH} = true ]; then \
    docker-php-ext-install bcmath; \
fi

#####################################
# GD
#####################################

RUN if [ ${INSTALL_GD} = true ]; then \
    docker-php-ext-configure gd --enable-gd-native-ttf --with-jpeg-dir=/usr --with-freetype-dir=/usr --with-png-dir=/usr; \
    docker-php-ext-install gd; \
fi

#####################################
# ImageMagick:
#####################################

RUN if [ ${INSTALL_IMAGICK} = true ]; then \
    RUN apt-get update; \
    apt-get install -y --no-install-recommends \
        libmagickwand-dev \
        imagemagick \
    ; \
    pecl install imagick; \
    docker-php-ext-enable imagick; \
fi

#####################################
# INTL - Human Language and Character Encoding Support:
#####################################

RUN if [ ${INSTALL_INTL} = true ]; then \
    curl -fsS -o /tmp/icu.tgz -L http://download.icu-project.org/files/icu4c/${INSTALL_ICU_VERSION}/icu4c-$(echo $INSTALL_ICU_VERSION | sed 's/\./_/')-src.tgz; \
    tar -zxf /tmp/icu.tgz -C /tmp; \
    cd /tmp/icu/source; \
    ./configure --prefix=/usr/local; \
    make; \
    make install; \
    rm -rf /tmp/icu*; \
    docker-php-ext-configure intl --with-icu-dir=/usr/local; \
    docker-php-ext-install intl; \
fi

#####################################
# MCRYPT
#####################################

RUN if [ ${INSTALL_MCRYPT} = true ]; then \
    docker-php-ext-install mcrypt; \
fi

#####################################
# MySQL
#####################################

RUN if [ ${INSTALL_MYSQL} = true ]; then \
    docker-php-ext-install pdo_mysql; \
fi

#####################################
# OPCACHE
#####################################

RUN if [ ${INSTALL_OPCACHE} = true ] && [ ${INSTALL_APCU} = false ]; then \
    docker-php-ext-install opcache; \
fi

COPY ./usr/local/etc/php/conf.d/opcache.ini /usr/local/etc/php/conf.d/opcache.ini

#####################################
# REDIS
#####################################

RUN if [ ${INSTALL_REDIS} = true ]; then \
    pecl install -o -f redis; \
    docker-php-ext-enable redis; \
fi

#####################################
# ZIP
#####################################

RUN if [ ${INSTALL_ZIP} = true ]; then \
    docker-php-ext-install zip; \
fi

#####################################
# Clean up
#####################################

RUN rm -rf /var/lib/apt/lists/*; \
    rm -rf /tmp/pear;

#####################################
# Final
#####################################

RUN usermod -u 1000 www-data

CMD ["php-fpm"]

EXPOSE 9000

WORKDIR /var/www
